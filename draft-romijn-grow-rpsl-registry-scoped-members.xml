<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.23 (Ruby 3.4.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-romijn-grow-rpsl-registry-scoped-members-01" category="info" submissionType="IETF" xml:lang="en" updates="2622, 4012">
  <front>
    <title abbrev="Registry scoped members for RPSL set objects">Registry scoped members for RPSL set objects</title>

    <author initials="S." surname="Romijn" fullname="Sasha Romijn">
      <organization>Reliably Coded</organization>
      <address>
        <postal>
          <city>Amsterdam</city>
          <country>NL</country>
        </postal>
        <email>sasha@reliablycoded.nl</email>
      </address>
    </author>
    <author initials="J." surname="Bensley" fullname="James Bensley">
      <organization>Inter.link GmbH</organization>
      <address>
        <postal>
          <street>Boxhagener Str. 80</street>
          <city>Berlin</city>
          <code>10245</code>
          <country>DE</country>
        </postal>
        <email>james@inter.link</email>
      </address>
    </author>

    <date year="2025" month="April" day="23"/>

    
    
    <keyword>rpsl</keyword>

    <abstract>


<?line 40?>

<t>This document updates RFC2622 and RFC4012 by specifying <spanx style="verb">src-members</spanx>,
a new attribute on as-set and route-set
objects in the Routing Policy Specification Language (RPSL).
This attribute allows a specific registry to be defined for each member
in a set, avoiding problematic ambiguity when resolving set members.
A new validation rule allows gradual upgrades and backwards compatibility.</t>



    </abstract>



  </front>

  <middle>


<?line 49?>

<section anchor="introduction"><name>Introduction</name>

<t>The Routing Policy Specification Language (RPSL) <xref target="RFC2622"/> defines the
as-set and route-set objects, extended in <xref target="RFC4012"/>.
These are among the most common objects in the Internet Routing Registry (IRR) system.
These sets can either reference a direct member of the set
(such as an AS number, IP prefix, etc.), or additional sets which themselves have
their own direct members and/or reference yet more sets, ad infinitum.
In both cases, this referencing uses the <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
attributes <xref target="RFC4012"/>.
Server and client software can follow these references to 
resolve a set down to its members, a set of prefixes or ASes.</t>

<t>A set may refer to another set by including the primary key in its
<spanx style="verb">(mp-)members</spanx> attribute.
The referred set may be in the same or in another IRR registry.
It is not possible to specify the IRR registry of
the referred set. This can lead to primary key collisions
when resolving a set:</t>

<t><list style="numbers" type="1">
  <t>There are multiple significant IRR registries.</t>
  <t>Sets often reference objects in registries other than the registry the set itself is stored in.</t>
  <t>There is no guaranteed uniqueness of object primary keys amongst the different registries.</t>
  <t>Hence, multiple objects may exist in the IRR system with the same primary key, 
making references to them ambiguous.</t>
  <t>Many IRR servers will mirror data from multiple IRR registries,
meaning that even within a single server, there are usually collisions.</t>
</list></t>

<t>The ambiguity encountered when resolving set members can result in either an
incorrect RPSL object being chosen, because an object with the same primary key
was retrieved from the wrong IRR registry, or the required RPSL object (which does exist)
is not found, because the resolving process didn't try to retrieve the object from
the correct IRR registry.
"Incorrect" and "wrong" in this context meaning: not as intended or expected by the operator.</t>

<t>Including members from the incorrect RPSL object can result in the computation of
unintentional routing policy information, which is then deployed to network infrastructure.
That could cause route leaking, or worse, aid in route hijacking.
This has been seen multiple times on the public Internet.</t>

<t>If intended policies are not included, because the object was not found,
prefixes that should be accepted, are not, and the prefixes are not reachable.</t>

<t>With either case, routing policy information may end up missing and connectivity 
may be disrupted.</t>

<t>There is no current way to prevent such ambiguity during set member resolution,
both for operators who create the legitimate objects and those who try to resolve them.</t>

<t>Two previous enhancements to reduce set name collisions have been standardized.
However, the problem persists:</t>

<t><list style="symbols">
  <t><xref target="RFC2622"/> Section 5.1 defines hierarchical set names, such as <spanx style="verb">AS65000:AS-EXAMPLE</spanx>
which may also have additional authorization requirements for the referred aut-num.
However, this authorization only works within a single IRR registry, and doesn't
allow the correct external IRR to be specified, if the object in question is not
local to the IRR registry storing the referring set.</t>
  <t><xref target="RFC2725"/> Section 9.6 defines external repository (IRR) references.
This allows for the correct IRR registry to be specified for a set member object
by using the SOURCE:: notation however, this syntax isn't supported in the members
field of set objects.</t>
</list></t>

<t>To solve this, this document adds <spanx style="verb">src-members</spanx> to as-set and route-set objects,
using a IRR registry name prefix with a double colon.
For example: "RIPE::AS-EXAMPLE", to refer specifically to an object "AS-EXAMPLE"
in the IRR registry "RIPE". This format is already widely used informally by operators,
including in platforms such as PeeringDB.
Continued availability of existing <spanx style="verb">(mp-)members</spanx> attributes
together with new validation rules, ensures backwards compatibility.</t>

<section anchor="requirements-language"><name>Requirements Language</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

</section>
</section>
<section anchor="the-src-members-attribute"><name>The <spanx style="verb">src-members</spanx> attribute</name>

<section anchor="as-set-class"><name>as-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on as-set is similar to the <spanx style="verb">members</spanx> attribute
from <xref target="RFC2622"/>, except that the AS set name <bcp14>MUST</bcp14> be prefixed with a registry name
and a double colon.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="route-set-class"><name>route-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on route-set is similar to the <spanx style="verb">mp-members</spanx> attribute 
from <xref target="RFC4012"/>, except that any references to set names <bcp14>MUST</bcp14> 
be prefixed with a registry name and a double colon.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">ipv4-address-prefix-range</spanx>] or [<spanx style="verb">ipv6-address-prefix-range</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>] or [<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>][<spanx style="verb">range-operator</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="resolving"><name>Resolving members through <spanx style="verb">src-members</spanx></name>

<t>IRR software that resolves the members of a set <bcp14>MUST</bcp14> have support for
objects with and without <spanx style="verb">src-members</spanx>.
These objects may be encountered if they were created or updated before
adoption of <spanx style="verb">src-members</spanx>, or the objects have not been updated since.</t>

<t>The resolving process is:</t>

<t><list style="numbers" type="1">
  <t>The resolver <bcp14>MUST</bcp14> include all members listed in the <spanx style="verb">src-members</spanx> attribute,
if any.
To find the referenced sets, the resolver <bcp14>MUST</bcp14> match on both the IRR registry
name and the set's primary key.
If the IRR registry is unknown to the resolver, no set can match the reference.</t>
  <t>The resolver <bcp14>MUST</bcp14> include all members listed in the <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
attributes, when their primary key was not already listed in <spanx style="verb">src-members</spanx>.
If there are multiple sets with a primary key known to the resolver,
the behavior is not defined by this document as this was a previously 
existing problem.</t>
</list></t>

<t>Note that the restriction to a specific IRR registry name is only used
to select the correct IRR registry to retrieve the referred object and its
attributes. During recursive resolving, if that set has references to further sets,
those <bcp14>MUST</bcp14> be retrieved from a potentially different registry. This could be either the
registry specified in the <spanx style="verb">src-members</spanx> attribute, if present, or the existing source
selection algorithm the IRR server currently uses when resolving using <spanx style="verb">(mp-)members</spanx>.
In other words, the restriction of the lookup to a specific IRR registry does not cascade.</t>

<section anchor="resolving-example"><name>Resolving example</name>

<figure title="Example objects for recursive lookups and attribute interactions"><sourcecode type="rpsl"><![CDATA[
route-set: RS-FIRST
members: RS-SECOND
mp-members: RS-LEGACY
src-members: RIPE::RS-SECOND
source: EXAMPLE

route-set: RS-SECOND
members: RS-THIRD
source: RIPE

route-set: RS-SECOND
members: AS65002
source: OTHER

route-set: RS-THIRD
members: AS65000
source: OTHER

route-set: RS-LEGACY
members: AS65001
source: OTHER
]]></sourcecode></figure>

<t>To perform a recursive lookup of RS-FIRST, the IRR software will:</t>

<t><list style="numbers" type="1">
  <t>Look up RS-FIRST.</t>
  <t>Determine that the members of RS-FIRST are RS-SECOND (RIPE registry only)
and RS-LEGACY (any registry). The mention of RS-SECOND in the <spanx style="verb">members</spanx>
attribute is not included, as <spanx style="verb">RS-SECOND</spanx> is already listed in <spanx style="verb">src-members</spanx>.</t>
  <t>Look up RS-SECOND in RIPE, and RS-LEGACY in any registry.</t>
  <t>Determine that the members of RS-LEGACY are AS65001, and the members
of RS-SECOND are RS-THIRD.</t>
  <t>Look up RS-THIRD in any registry.</t>
  <t>Determine that the members of RS-THIRD are AS65000.</t>
</list></t>

<t>If all mentioned registries are enabled, RS-FIRST would resolve to
AS65000 and AS65001.</t>

<t>The RS-SECOND object in the OTHER registry is never looked up,
and AS65002 is not included. This would happen even if there was no
RS-SECOND object found in RIPE.</t>

</section>
<section anchor="query-parameters"><name>Query parameters</name>

<t>When querying a set to resolve its members, IRR software typically
expects the primary key of the set as a query parameter from the user.
This reference is also ambiguous without referring to a specific registry.</t>

<t>IRR software <bcp14>MUST</bcp14> support a user-provided parameter to restrict the initial lookup
of the set object to a specific registry.
This restriction <bcp14>MUST NOT</bcp14> apply to further lookups performed by the IRR software
when resolving the set, i.e., this restriction also does not cascade.</t>

<t>For text based queries, IRR software is <bcp14>RECOMMENDED</bcp14> to allow this parameter to be
provided in similar syntax as the <spanx style="verb">src-members</spanx> value, e.g. RIPE::AS-DEMO,
to query the object with primary key AS-DEMO in registry RIPE,
and then continue resolving its members.</t>

</section>
</section>
</section>
<section anchor="relation-to-mp-members"><name>Relation to <spanx style="verb">(mp-)members</spanx></name>

<t>Existing IRR software will not be aware of the new <spanx style="verb">src-members</spanx> attribute
and instead refer to <spanx style="verb">(mp-)members</spanx>.
This is also why the existing attributes are not modified - this existing software
would consider e.g. <spanx style="verb">RIPE::AS-EXAMPLE</spanx> as the full primary key of a set, and fail
to look up the reference as intended.</t>

<t>Existing IRR objects may also not be updated with <spanx style="verb">src-members</spanx> for some time,
as this cannot be done automatically. Or, they may be partially updated
as for large sets, finding the intended IRR registry references
may take some time.
Deployment in both software and objects will be a gradual process, however,
even partial deployment will reduce the potential for issues from reference
mixups.</t>

<t>In order to keep support for existing IRR software, the contents of
<spanx style="verb">src-members</spanx> must match <spanx style="verb">(mp-)members</spanx> as close as possible,
which the IRR server will ensure.</t>

<section anchor="validation"><name>Additional validation</name>

<t>When an authoritative IRR registry processes a set object with a <spanx style="verb">src-members</spanx>
attribute, it <bcp14>MUST</bcp14> validate that all references in <spanx style="verb">src-members</spanx>, with the registry
names removed, are also listed in <spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx>.
All values <bcp14>MUST</bcp14> be combined, regardless if they were listed in
one attribute, or in multiple repetitions of the attribute.</t>

<t>This ensures that the new <spanx style="verb">src-members</spanx> can be used, providing the benefits
for updated resolver software, while still having a consistent <spanx style="verb">(mp-)members</spanx> available
for older software.</t>

<t>IRR registry software is <bcp14>RECOMMENDED</bcp14> to make the <spanx style="verb">src-members</spanx> attribute
mandatory on all new as-set/route-set objects, and <bcp14>MAY</bcp14> make it required when modifying
existing objects.</t>

<t>Example of a valid object:</t>

<figure title="Valid object"><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/32
mp-members: RS-OTHER
src-members: 192.0.2.0/24, RIPE::RS-OTHER, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

<t>Example of an invalid object:</t>

<figure title="Invalid object: inconsistent inclusion of NTTCOM::RS-SRCMBRONLY, and 200:db8::/36 vs /32. Note: the inclusion RS-MPMBRONLY only in mp-members is permitted."><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/36
mp-members: RS-OTHER, RS-MPMBRONLY
src-members: 192.0.2.0/24, RIPE::RS-OTHER
src-members: NTTCOM::RS-SRCMBRONLY, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

</section>
<section anchor="automatic-generation-of-mp-members"><name>Automatic generation of <spanx style="verb">(mp-)members</spanx></name>

<t>Managing multiple copies of the same records is tedious for users.
Therefore, IRR registry software is <bcp14>RECOMMENDED</bcp14> to automatically
fill <spanx style="verb">(mp-)members</spanx>, if not specified by the user, based on <spanx style="verb">src-members</spanx>,
in authoritative objects, when the user creates or updates the object.</t>

<t>Specifically, for authoritative IRR registries:</t>

<t><list style="symbols">
  <t>It is <bcp14>RECOMMENDED</bcp14> that when creating/updating a route-set object
with a <spanx style="verb">src-members</spanx> attribute, but without both a <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
attribute, the software fills the <spanx style="verb">mp-members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with the IRR registry prefix removed from references.</t>
  <t>It is <bcp14>RECOMMENDED</bcp14> that when creating/updating an as-set object
with a <spanx style="verb">src-members</spanx> attribute, but without a <spanx style="verb">members</spanx>
attribute, the software fills the <spanx style="verb">members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with the IRR registry prefix removed from references.</t>
</list></t>

<t>The registry <bcp14>MAY</bcp14> return an informational message to the user about
the modifications.
The objects <bcp14>MUST NOT</bcp14> be modified if already submitted with any
<spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx> attribute, though the <xref target="validation">validation rules noted
earlier</xref> <bcp14>MUST</bcp14> still be applied.
Non-authoritative servers <bcp14>MUST NOT</bcp14> generate <spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx>
automatically.</t>

<t>IRR registry software <bcp14>MUST NOT</bcp14> attempt to automatically derive
<spanx style="verb">src-members</spanx> from <spanx style="verb">(mp-)members</spanx>, as this cannot be done reliably.</t>

</section>
<section anchor="multiple-references-to-the-same-primary-key"><name>Multiple references to the same primary key</name>

<t>Adding a IRR registry scope to each reference syntactically allows a new
behavior: having multiple references to the same RPSL primary key.
This is not permitted, and IRR registry software <bcp14>MUST</bcp14> reject this:</t>

<figure title="Invalid object fragment using multiple registry prefixes with the same RPSL primary key"><sourcecode type="rpsl"><![CDATA[
src-members: RIPE::AS-OTHER, ARIN::AS-OTHER
]]></sourcecode></figure>

<t>The IRR registry software <bcp14>MUST</bcp14> verify that, without their registry prefix,
all references from <spanx style="verb">src-members</spanx> are unique.</t>

<t>This reduces ambiguity regarding backwards compatibility with <spanx style="verb">(mp-)members</spanx>
described earlier.
If allowed, the attribute <spanx style="verb">src-members: RIPE::AS-OTHER, ARIN::AS-OTHER</spanx> would
refer to two different sets, whereas the translation <spanx style="verb">mp-members: AS-OTHER</spanx>
only refers to one set.</t>

</section>
</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This memo includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t>This document removes a potential security issue where routing
policy could be manipulated by maliciously creating set objects,
which could be used in favor of legitimate objects.</t>

<t>While not a new issue, references between set objects can be
circular, and software <bcp14>MUST</bcp14> detect such cases while resolving.
It is <bcp14>RECOMMENDED</bcp14> to also limit the depth or size of their resolving
to prevent excessive resource use.</t>

</section>


  </middle>

  <back>



    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2622">
  <front>
    <title>Routing Policy Specification Language (RPSL)</title>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="E. Gerich" initials="E." surname="Gerich"/>
    <author fullname="D. Kessens" initials="D." surname="Kessens"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="T. Bates" initials="T." surname="Bates"/>
    <author fullname="D. Karrenberg" initials="D." surname="Karrenberg"/>
    <author fullname="M. Terpstra" initials="M." surname="Terpstra"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>RPSL allows a network operator to be able to specify routing policies at various levels in the Internet hierarchy; for example at the Autonomous System (AS) level. At the same time, policies can be specified with sufficient detail in RPSL so that low level router configurations can be generated from them. RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2622"/>
  <seriesInfo name="DOI" value="10.17487/RFC2622"/>
</reference>
<reference anchor="RFC2725">
  <front>
    <title>Routing Policy System Security</title>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="S. Murphy" initials="S." surname="Murphy"/>
    <date month="December" year="1999"/>
    <abstract>
      <t>The implementation and deployment of a routing policy system must maintain some degree of integrity to be of any operational use. This document addresses the need to assure integrity of the data by providing an authentication and authorization model. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2725"/>
  <seriesInfo name="DOI" value="10.17487/RFC2725"/>
</reference>
<reference anchor="RFC4012">
  <front>
    <title>Routing Policy Specification Language next generation (RPSLng)</title>
    <author fullname="L. Blunk" initials="L." surname="Blunk"/>
    <author fullname="J. Damas" initials="J." surname="Damas"/>
    <author fullname="F. Parent" initials="F." surname="Parent"/>
    <author fullname="A. Robachevsky" initials="A." surname="Robachevsky"/>
    <date month="March" year="2005"/>
    <abstract>
      <t>This memo introduces a new set of simple extensions to the Routing Policy Specification Language (RPSL), enabling the language to document routing policies for the IPv6 and multicast address families currently used in the Internet. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4012"/>
  <seriesInfo name="DOI" value="10.17487/RFC4012"/>
</reference>
<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>
<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>



    </references>





  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA8Vb/3Ibx5H+f55ijv7DUgqASZ7s2KhcEkqiI6ZISiHk5Fy2
6zjYHRBrLXbhnV1CtEv3LPcs92T3dffM7OyCpOVUpS5VVojFzkz/7q+7B9Pp
VLnWVPl/mbKu7Fy3TWdVsW34L9ceHx5+dXisMtPOdVGtauW65aZwrqir9m6L
989O336tTGPNXKvdzVypvM4qs8E3eWNW7bSpN8WP1fSmqXfTZuvKaWNvCtc2
d1OX1VubTzd2s7SNmx4eqW6bm9a6uT7+4vh4op8dHh0r1RZtid2u/DIty7Rf
pld1o6/eLM61s62ulz/arHXKLJeNvf2Ni0pT3cy1rdS73VxpPdVErjJdu66b
uZqCfVC2mOkr5ghvCJsL49amf1g3N3RuWZhleadf1LnN8TQr2ru5Ptm41ja5
2dCTuqtA2VxfnuOT3ZiinGtHe/258aszWjyrynD2X2f6ua1cae/i4X/Fvy55
yqefVThlVhbVO/2XzfIVHkMG1kKDz+v3a3NjK9voRdvM9JeHTEmOnY4Oj599
Hil9bhusT8l8edqT+SOd+uciHqOUqupmY9ri1pLorr5+QRoMf/7++HP/J2l0
rsiO4ttqOp1qswSFJmuVersunIYJdRtbtdobRNhQw07DNnoJrW5tVqzuiupG
X7smC6Z0PVFGV3anTds2xbJrra4rbdyUtE1bNDWe0SfldQ/56nZtocWupd3e
1GWR3ekF71/A+GHu+hz20UF6+gmZztOZ0NqfYcqy3uGBJ6vIdDB13dZ6aXVu
V0UFKyTrsyZbe3OEPGiRbSfa3NZFTgRsm3pZWpJRps1mWdx0UIverW2FTV1d
3tJLxI5neaZOmONbUxa5kNt0ZaTppjF5Z0rIk/6CQEkKS5O925kmd1DyZotF
y6LEKTNRyabI89Iq9QmZU1PnXUa7koJ+m5j0L7947X344CXgSNbqPn0EX5xo
+761FcyfNMM7kM4/fCChWwe+Gvy3qUEDqW1Tu5aYwAM90ij7QoWdA80xJDw5
u7p6qt0dXHITtgUJkIaptC2wuIGsV7axVYbDdF402NgLXNcr3p5s6InroEtD
QtUnC1119MJEn72BFsHvezDTZrOnEzinNnlekJSgCz5rty6wFjttnC1vIZm1
ubUKnwscsauGh7LaPqtTsu7IBOpGKIf9kLwg4qLtwNNZpZd1uwZDzuLLlsw1
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

-->

</rfc>

