<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.23 (Ruby 3.4.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-romijn-rpsl-registry-scoped-members-00" category="info" submissionType="IETF" xml:lang="en" updates="2622, 4012">
  <front>
    <title abbrev="Registry scoped members for RPSL set objects">Registry scoped members for RPSL set objects</title>

    <author initials="S." surname="Romijn" fullname="Sasha Romijn">
      <organization>Reliably Coded</organization>
      <address>
        <postal>
          <city>Amsterdam</city>
          <country>NL</country>
        </postal>
        <email>sasha@reliablycoded.nl</email>
      </address>
    </author>
    <author initials="J." surname="Bensley" fullname="James Bensley">
      <organization>Inter.link GmbH</organization>
      <address>
        <postal>
          <street>Boxhagener Str. 80</street>
          <city>Berlin</city>
          <code>10245</code>
          <country>DE</country>
        </postal>
        <email>james@inter.link</email>
      </address>
    </author>

    <date year="2025" month="February" day="20"/>

    
    
    <keyword>rpsl</keyword>

    <abstract>


<?line 40?>

<t>This document updates <xref target="RFC2622"/> and <xref target="RFC4012"/> by specifying <spanx style="verb">src-members</spanx>,
a new attribute on as-set and route-set
objects in the Routing Policy Specification Language (RPSL).
This attribute allows a specific registry to be defined for each member
in a set, avoiding problematic ambiguity when resolving set members.
A new validation rule allows gradual upgrades and backwards compatibility.</t>



    </abstract>



  </front>

  <middle>


<?line 49?>

<section anchor="introduction"><name>Introduction</name>

<t>The Routing Policy Specification Language (RPSL) <xref target="RFC2622"/> defines the
as-set and route-set objects, extended in <xref target="RFC4012"/>.
These are among the most common objects in the Internet Routing Registry (IRR) system.
These sets can either reference a direct member of the set
(such as an AS number, IP prefix, etc.), or additional sets which themselves have
their own direct members and/or reference yet more sets, ad infinitum.
In both cases, this referencing uses the <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
attributes <xref target="RFC4012"/>.
Server and client software can follow these references to 
resolve a set down to its members, a set of prefixes or ASes.</t>

<t>A set may refer to another set by including the primary key in its
<spanx style="verb">(mp-)members</spanx> attribute.
The referred set may be in the same or in another IRR registry.
It is not possible to specify the IRR registry of
the referred set. This can lead to primary key collisions
when resolving a set:</t>

<t><list style="numbers" type="1">
  <t>There are multiple significant IRR registries.</t>
  <t>Sets often reference objects in registries other than the registry the set itself is stored in.</t>
  <t>There is no guaranteed uniqueness of object primary keys amongst the different registries.</t>
  <t>Hence, multiple objects may exist in the IRR system with the same primary key, 
making references to them ambiguous.</t>
  <t>Many IRR servers will mirror data from multiple IRR registries,
meaning that even within a single server, there are usually collisions.</t>
</list></t>

<t>The ambiguity encountered when resolving set members can result in either an
incorrect RPSL object being chosen, because an object with the same primary key
was retrieved from the wrong IRR registry, or the required RPSL object (which does exist)
is not found, because the resolving process didn't try to retrieve the object from
the correct IRR registry.
"Incorrect" and "wrong" in this context meaning: not as intended or expected by the operator.</t>

<t>Including members from the incorrect RPSL object can result in the computation of
unintentional routing policy information, which is then deployed to network infrastructure.
That could cause route leaking, or worse, aid in route hijacking.
This has been seen multiple times on the public Internet.</t>

<t>If intended policies are not included, because the object was not found,
prefixes that should be accepted, are not, and the prefixes are not reachable.</t>

<t>With either case, routing policy information may end up missing and connectivity 
may be disrupted.</t>

<t>There is no current way to prevent such ambiguity during set member resolution,
both for operators who create the legitimate objects and those who try to resolve them.</t>

<t>Two previous enhancements to reduce set name collisions have been standardized.
However, the problem persists:</t>

<t><list style="symbols">
  <t><xref target="RFC2622"/> Section 5.1 defines hierarchical set names, such as <spanx style="verb">AS65000:AS-EXAMPLE</spanx>
which may also have additional authorization requirements for the referred aut-num.
However, this authorization only works within a single IRR registry, and doesn't
allow the correct external IRR to be specified, if the object in question is not
local to the IRR registry storing the referring set.</t>
  <t><xref target="RFC2725"/> Section 9.6 defines external repository (IRR) references.
This allows for the correct IRR registry to be specified for a set member object
by using the SOURCE:: notation however, this syntax isn't supported in the members
field of set objects.</t>
</list></t>

<t>To solve this, this document adds <spanx style="verb">src-members</spanx> to as-set and route-set objects,
using a IRR registry name prefix with a double colon.
For example: "RIPE::AS-EXAMPLE", to refer specifically to an object "AS-EXAMPLE"
in the IRR registry "RIPE". This format is already widely used informally by operators,
including in platforms such as PeeringDB.
Continued availability of existing <spanx style="verb">(mp-)members</spanx> attributes
together with new validation rules, ensures backwards compatibility.</t>

<section anchor="requirements-language"><name>Requirements Language</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

</section>
</section>
<section anchor="the-src-members-attribute"><name>The <spanx style="verb">src-members</spanx> attribute</name>

<section anchor="as-set-class"><name>as-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on as-set is similar to the <spanx style="verb">members</spanx> attribute
from <xref target="RFC2622"/>, except that the AS set name <bcp14>MUST</bcp14> be prefixed with a registry name
and a double colon.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="route-set-class"><name>route-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on route-set is similar to the <spanx style="verb">mp-members</spanx> attribute 
from <xref target="RFC4012"/>, except that any references to set names <bcp14>MUST</bcp14> 
be prefixed with a registry name and a double colon.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">ipv4-address-prefix-range</spanx>] or [<spanx style="verb">ipv6-address-prefix-range</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>] or [<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>][<spanx style="verb">range-operator</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="resolving"><name>Resolving members through <spanx style="verb">src-members</spanx></name>

<t>IRR software that resolves the members of a set <bcp14>MUST</bcp14> have support for
objects with and without <spanx style="verb">src-members</spanx>.
These objects may be encountered if they were created or updated before
adoption of <spanx style="verb">src-members</spanx>, or the objects have not been updated since.</t>

<t>The resolving process is:
1. The resolver <bcp14>MUST</bcp14> include all members listed in the <spanx style="verb">src-members</spanx> attribute,
   if any.
   To find the referenced sets, the resolver <bcp14>MUST</bcp14> match on both the IRR registry
   name and the set's primary key.
   If the IRR registry is unknown to the resolver, no set can match the reference.
1. The resolver <bcp14>MUST</bcp14> include all members listed in the <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
   attributes, when their primary key was not already listed in <spanx style="verb">src-members</spanx>.
   If there are multiple sets with a primary key known to the resolver,
   the behavior is not defined by this document as this was a previously 
   existing problem.</t>

<t>Note that the restriction to a specific IRR registry name is only used
to select the correct IRR registry to retrieve the referred object and its
attributes. During recursive resolving, if that set has references to further sets,
those <bcp14>MUST</bcp14> be retrieved from a potentially different registry. This could be either the
registry specified in the <spanx style="verb">src-members</spanx> attribute, if present, or the existing source
selection algorithm the IRR server currently uses when resolving using <spanx style="verb">(mp-)members</spanx>.
In other words, the restriction of the lookup to a specific IRR registry does not cascade.</t>

<section anchor="resolving-example"><name>Resolving example</name>

<figure title="Example objects for recursive lookups and attribute interactions"><sourcecode type="rpsl"><![CDATA[
route-set: RS-FIRST
members: RS-SECOND
mp-members: RS-LEGACY
src-members: RIPE::RS-SECOND
source: EXAMPLE

route-set: RS-SECOND
members: RS-THIRD
source: RIPE

route-set: RS-SECOND
members: AS65002
source: OTHER

route-set: RS-THIRD
members: AS65000
source: OTHER

route-set: RS-LEGACY
members: AS65001
source: OTHER
]]></sourcecode></figure>

<t>To perform a recursive lookup of RS-FIRST, the IRR software will:
1. Look up RS-FIRST.
1. Determine that the members of RS-FIRST are RS-SECOND (RIPE registry only)
   and RS-LEGACY (any registry). The mention of RS-SECOND in the <spanx style="verb">members</spanx>
   attribute is not included, as <spanx style="verb">RS-SECOND</spanx> is already listed in <spanx style="verb">src-members</spanx>.
1. Look up RS-SECOND in RIPE, and RS-LEGACY in any registry.
1. Determine that the members of RS-LEGACY are AS65001, and the members
   of RS-SECOND are RS-THIRD.
1. Look up RS-THIRD in any registry.
1. Determine that the members of RS-THIRD are AS65000.</t>

<t>If all mentioned registries are enabled, RS-FIRST would resolve to
AS64500 and AS64501.</t>

<t>The RS-SECOND object in the OTHER registry is never looked up,
and AS65002 is not included. This would happen even if there was no
RS-SECOND object found in RIPE.</t>

</section>
</section>
</section>
<section anchor="relation-to-mp-members"><name>Relation to <spanx style="verb">(mp-)members</spanx></name>

<t>Existing IRR software will not be aware of the new <spanx style="verb">src-members</spanx> attribute
and instead refer to <spanx style="verb">(mp-)members</spanx>.
This is also why the existing attributes are not modified - this existing software
would consider e.g. <spanx style="verb">RIPE::AS-EXAMPLE</spanx> as the full primary key of a set, and fail
to look up the reference as intended.</t>

<t>Existing IRR objects may also not be updated with <spanx style="verb">src-members</spanx> for some time,
as this cannot be done automatically. Or, they may be partially updated
as for large sets, finding the intended IRR registry references
may take some time.
Deployment in both software and objects will be a gradual process, however,
even partial deployment will reduce the potential for issues from reference
mixups.</t>

<t>In order to keep support for existing IRR software, the contents of
<spanx style="verb">src-members</spanx> must match <spanx style="verb">(mp-)members</spanx> as close as possible,
which the IRR server will ensure.</t>

<section anchor="validation"><name>Additional validation</name>

<t>When an authoritative IRR registry processes a set object with a <spanx style="verb">src-members</spanx>
attribute, it <bcp14>MUST</bcp14> validate that all references in <spanx style="verb">src-members</spanx>, with the registry
names removed, are also listed in <spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx>.
All values <bcp14>MUST</bcp14> be combined, regardless if they were listed in
one attribute, or in multiple repetitions of the attribute.</t>

<t>This ensures that the new <spanx style="verb">src-members</spanx> can be used, providing the benefits
for updated resolver software, while still having a consistent <spanx style="verb">(mp-)members</spanx> available
for older software.</t>

<t>IRR registry software is <bcp14>RECOMMENDED</bcp14> to make the <spanx style="verb">src-members</spanx> attribute
mandatory on all new as-set/route-set objects, and <bcp14>MAY</bcp14> make it required when modifying
existing objects.</t>

<t>Example of a valid object:</t>

<figure title="Valid object"><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/32
mp-members: RS-OTHER
src-members: 192.0.2.0/24, RIPE::RS-OTHER, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

<t>Example of an invalid object:</t>

<figure title="Invalid object: inconsistent inclusion of NTTCOM::RS-SRCMBRONLY, and 200:db8::/36 vs /32. Note: the inclusion RS-MPMBRONLY only in mp-members is permitted."><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/36
mp-members: RS-OTHER, RS-MPMBRONLY
src-members: 192.0.2.0/24, RIPE::RS-OTHER
src-members: NTTCOM::RS-SRCMBRONLY, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

</section>
<section anchor="automatic-generation-of-mp-members"><name>Automatic generation of <spanx style="verb">(mp-)members</spanx></name>

<t>Managing multiple copies of the same records is tedious for users.
Therefore, IRR registry software is <bcp14>RECOMMENDED</bcp14> to automatically
fill <spanx style="verb">(mp-)members</spanx>, if not specified by the user, based on <spanx style="verb">src-members</spanx>,
in authoritative objects, when the user creates or updates the object.</t>

<t>Specifically, for authoritative IRR registries:</t>

<t><list style="symbols">
  <t>It is <bcp14>RECOMMENDED</bcp14> that when creating/updating a route-set object
with a <spanx style="verb">src-members</spanx> attribute, but without both a <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
attribute, the software fills the <spanx style="verb">mp-members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with the IRR registry prefix removed from references.</t>
  <t>It is <bcp14>RECOMMENDED</bcp14> that when creating/updating an as-set object
with a <spanx style="verb">src-members</spanx> attribute, but without a <spanx style="verb">members</spanx>
attribute, the software fills the <spanx style="verb">members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with the IRR registry prefix removed from references.</t>
</list></t>

<t>The registry <bcp14>MAY</bcp14> return an informational message to the user about
the modifications.
The objects <bcp14>MUST NOT</bcp14> be modified if already submitted with any
<spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx> attribute, though the <xref target="validation">validation rules noted
earlier</xref> <bcp14>MUST</bcp14> still be applied.
Non-authoritative servers <bcp14>MUST NOT</bcp14> generate <spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx>
automatically.</t>

<t>IRR registry software <bcp14>MUST NOT</bcp14> attempt to automatically derive
<spanx style="verb">src-members</spanx> from <spanx style="verb">(mp-)members</spanx>, as this cannot be done reliably.</t>

</section>
<section anchor="multiple-references-to-the-same-primary-key"><name>Multiple references to the same primary key</name>

<t>Adding a IRR registry scope to each reference syntactically allows a new
behavior: having multiple references to the same RPSL primary key.
This is not permitted, and IRR registry software <bcp14>MUST</bcp14> reject this:</t>

<figure title="Invalid object fragment using multiple registry prefixes with the same RPSL primary key"><sourcecode type="rpsl"><![CDATA[
src-members: RIPE::AS-OTHER, ARIN::AS-OTHER
]]></sourcecode></figure>

<t>The IRR registry software <bcp14>MUST</bcp14> verify that, without their registry prefix,
all references from <spanx style="verb">src-members</spanx> are unique.</t>

<t>This reduces ambiguity regarding backwards compatibility with <spanx style="verb">(mp-)members</spanx>
described earlier.
If allowed, the attribute <spanx style="verb">src-members: RIPE::AS-OTHER, ARIN::AS-OTHER</spanx> would
refer to two different sets, whereas the translation <spanx style="verb">mp-members: AS-OTHER</spanx>
only refers to one set.</t>

</section>
</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This memo includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t>This document removes a potential security issue where routing
policy could be manipulated by maliciously creating set objects,
which could be used in favor of legitimate objects.</t>

<t>While not a new issue, references between set objects can be
circular, and software <bcp14>MUST</bcp14> detect such cases while resolving.
It is <bcp14>RECOMMENDED</bcp14> to also limit the depth or size of their resolving
to prevent excessive resource use.</t>

</section>


  </middle>

  <back>



    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2622">
  <front>
    <title>Routing Policy Specification Language (RPSL)</title>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="E. Gerich" initials="E." surname="Gerich"/>
    <author fullname="D. Kessens" initials="D." surname="Kessens"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="T. Bates" initials="T." surname="Bates"/>
    <author fullname="D. Karrenberg" initials="D." surname="Karrenberg"/>
    <author fullname="M. Terpstra" initials="M." surname="Terpstra"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>RPSL allows a network operator to be able to specify routing policies at various levels in the Internet hierarchy; for example at the Autonomous System (AS) level. At the same time, policies can be specified with sufficient detail in RPSL so that low level router configurations can be generated from them. RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2622"/>
  <seriesInfo name="DOI" value="10.17487/RFC2622"/>
</reference>
<reference anchor="RFC2725">
  <front>
    <title>Routing Policy System Security</title>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="S. Murphy" initials="S." surname="Murphy"/>
    <date month="December" year="1999"/>
    <abstract>
      <t>The implementation and deployment of a routing policy system must maintain some degree of integrity to be of any operational use. This document addresses the need to assure integrity of the data by providing an authentication and authorization model. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2725"/>
  <seriesInfo name="DOI" value="10.17487/RFC2725"/>
</reference>
<reference anchor="RFC4012">
  <front>
    <title>Routing Policy Specification Language next generation (RPSLng)</title>
    <author fullname="L. Blunk" initials="L." surname="Blunk"/>
    <author fullname="J. Damas" initials="J." surname="Damas"/>
    <author fullname="F. Parent" initials="F." surname="Parent"/>
    <author fullname="A. Robachevsky" initials="A." surname="Robachevsky"/>
    <date month="March" year="2005"/>
    <abstract>
      <t>This memo introduces a new set of simple extensions to the Routing Policy Specification Language (RPSL), enabling the language to document routing policies for the IPv6 and multicast address families currently used in the Internet. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4012"/>
  <seriesInfo name="DOI" value="10.17487/RFC4012"/>
</reference>
<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>
<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>



    </references>





  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA8VbbXMbx5H+Pr9ijv5gKQXAJCMrNiqXBJLoiCmS0hFycirb
dRzsDoiRFrvIzi4p2qX7Lfdb7pfd090zsy98seSq1KXKCrDY6en3frpnOJ1O
lW9Mmf+XKarSznVTt1a5Xc2ffHO4v//t/qHKTDPXrlxXyrerrfPeVWVzs8P7
x0dvvlOmtmau1fXlXKm8ykqzxS95bdbNtK627l05rXe+mNb20vmmvpn6rNrZ
fLq125Wt/XR/X7W73DTWz/Xh08PDiX6yf3CoVOOaAoTOwzIty3RYptdVrc9f
L0+0t42uVu9s1nhlVqvaXn3mosKUl3NtS/X+eq60nmpiV5m22VT1XE0hOThb
zvQ5C4M3RMKl8RvTPazqS9q3cGZV3OjnVW5zPM1cczPXi61vbJ2bLT2p2hKc
zfXZCb7ZrXHFXHui9Zc6rM5o8aws4t5/m+lntvSFvUmb/w3/+t5T3v24xC6z
wpXv9V+3q5d4DB1YC+M9qz5szKUtba2XTT3T3+wzJzkoHewfPvk6cfrM1ljf
Z/PFUcfmO9r1Ly5to5Qqq3prGndlSXXn3z0nC8aPfzj8Onwki84VuVB6W02n
U21W4NBkjVJvNs5reE+7tWWjg0PoX34JJD9+1HBT+U7E8H0F6+5s5tY3rrzU
F77OoktdTJTRpb3Wpmlqt2obq6tSGz8lqxOZusIz+qaCD0DPutlYWLNtiNrr
qnDZjV4yfQf/h8frE/hJCy3qR+RCj2fCc7eHKYrqGg8CWy7T0eV1U+mV1bld
uxLeSF5oTbYJbgm90CLbTLS5qlxODOzqalVY0lWmzXblLluYR19vbAmiviqu
6CUSJ4g8UwuW+MoULhd267ZIPF3WJm9NAb3SJyiWtLAy2ftrU+cext7usGjl
CuwyE9NsXZ4XVqkvyK3qKm8zokqG+jw1DWwoGvCka3WXPWJMTrT90NgSYUCW
6VmdlG495Krx37YCD2S2beUbEgIP9MiiHBMlKEeeU2p4dHx+/lj7G4TmNpIF
C9CGKbV1WFxD12tb2zLDZjp3NQgHhetqzeTJhx75FrY0pFS9WOqypRcm+vg1
rAh5P0CYJps9niBItclzR1qCLXiv643DWlDaeltcQTMbc2UVvjtscV0ON2Wz
fVX12bohF6hq4Rz+Q/qCil3TQqbjUq+qZgOBvMWPDblrXEqqaL2YQl/EwGFr
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
HTgRLCclhL8JIu9X/wcNIZckNTgAAA==

-->

</rfc>

