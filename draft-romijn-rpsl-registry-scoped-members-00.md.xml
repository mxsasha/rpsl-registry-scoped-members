<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.23 (Ruby 3.4.1) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-romijn-rpsl-registry-scoped-members-00" category="info" submissionType="IETF" xml:lang="en" updates="2622, 4012">
  <front>
    <title abbrev="Registry scoped members for RPSL set objects">Registry scoped members for RPSL set objects</title>

    <author initials="S." surname="Romijn" fullname="Sasha Romijn">
      <organization>Reliably Coded</organization>
      <address>
        <postal>
          <city>Amsterdam</city>
          <country>NL</country>
        </postal>
        <email>sasha@reliablycoded.nl</email>
      </address>
    </author>

    <date year="2025" month="February" day="06"/>

    
    
    <keyword>rpsl</keyword>

    <abstract>


<?line 32?>

<t>This document updates <xref target="RFC2622"/> and <xref target="RFC4012"/> by specifying <spanx style="verb">src-members</spanx>,
a new attribute on as-set and route-set
objects in the Routing Policy Specification Language (RPSL).
This attribute allows a specific registry to be specified for each member
in a set, avoiding problematic ambiguity when resolving set members.
A new validation rule allows gradual upgrades and backwards compatibility.</t>



    </abstract>



  </front>

  <middle>


<?line 41?>

<section anchor="introduction"><name>Introduction</name>

<t>The Routing Policy Specification Language (RPSL) <xref target="RFC2622"/> defines the
as-set and route-set objects, extended in <xref target="RFC4012"/>.
These are among the most common objects in the Internet Routing Registry (IRR) system.
These sets can either reference a direct member of the set
(such as an AS number, IP prefix, etc.), or additional sets which themselves have
their own direct members and/or reference yet more sets, ad infinitum.
In both cases, this referencing uses the members and mp-members
attributes <xref target="RFC4012"/>.
Server and client software can follow these references to 
resolve a set down to its members, a set of prefixes or ASes.</t>

<t>A set may refer to another set by including the primary key in its
<spanx style="verb">(mp-)members</spanx> attribute, which may be in the same, or another IRR registry.
It is not possible to specify the IRR registry of
the referred set. This makes primary key collisions possible
when resolving a set:</t>

<t><list style="numbers" type="1">
  <t>There are multiple significant IRR registries.</t>
  <t>Sets often reference objects in registries other than the registry the set itself is stored in.</t>
  <t>There is no guaranteed uniqueness of object primary keys amongst the different registries.</t>
  <t>Hence, multiple objects may exist in the IRR system with the same name, making references to them ambiguous.</t>
  <t>Many IRR servers will mirror data from multiple IRRs, meaning that even within
a single server, there are usually collisions.</t>
</list></t>

<t>The ambiguity encountered when resolving set members can result in either an
incorrect RPSL object being chosen, because an object with the same primary key
was retrieved from the wrong IRR registry, or the required RPSL object (which does exist)
is not found, because the resolving process didn't try to retrieve the object from
the correct IRR registry.
"Incorrect" and "wrong" in this context meaning: not as intended or expected by the operator.</t>

<t>With the former case, the result can be that unintentional routing policy information
maybe be computed and deployed to network infrastructure, which could aid in route leaking,
and in the worst case, route hijacking.
This has been seen multiple times on the public Internet.</t>

<t>With either case, routing policy information may end up missing and connectivity
may be disrupted.</t>

<t>There is no current way to prevent such ambiguity during set member resolution, both for operators who create the legitimate objects and those who try to resolve them.</t>

<t>Two previous enhancements to reduce set name collisions have been standardized.
however, the problem persists:</t>

<t><list style="symbols">
  <t><xref target="RFC2622"/> Section 5.1 defines hierarchical set names, such as <spanx style="verb">AS65000:AS-EXAMPLE</spanx>
which may also have additional authorization requirements for the referred aut-num.
However, this authorization only works within a single IRR registry, and doesn't
allow the correct external IRR to be specified, if the object in question is not
local to the IRR registry storing the referring set.</t>
  <t><xref target="RFC2725"/> Section 9.6 defines external repository (IRR) references.
This allows for the correct IRR registry to be specified for a set member object
by using the SOURCE:: notation however, this syntax isn't supported in the members
filed of set objects.</t>
</list></t>

<t>To solve this, this documents adds <spanx style="verb">src-members</spanx> to as-set and route-set objects,
using a IRR registry name prefix with a double colon.
For example, "RIPE::AS-EXAMPLE", a format already used by operators informally,
for example in PeeringDB.
Continued availability of existing <spanx style="verb">(mp-)members</spanx> attributes
together with new validation rules, ensures backwards compatibility.</t>

<section anchor="requirements-language"><name>Requirements Language</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

</section>
</section>
<section anchor="the-src-members-attribute"><name>The <spanx style="verb">src-members</spanx> attribute</name>

<section anchor="as-set-class"><name>as-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on as-set is similar to the <spanx style="verb">members</spanx> attribute
from <xref target="RFC2622"/>, except that the AS set name <bcp14>MUST</bcp14> be prefixed with a registry name.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="route-set-class"><name>route-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on route-set is similar to the <spanx style="verb">mp-members</spanx> attribute 
from <xref target="RFC4012"/>, except that any references to set names <bcp14>MUST</bcp14> 
be prefixed with a registry name.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">ipv4-address-prefix-range</spanx>] or [<spanx style="verb">ipv6-address-prefix-range</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>] or [<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>][<spanx style="verb">range-operator</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="resolving-members-through-src-members"><name>Resolving members through <spanx style="verb">src-members</spanx></name>

<t>When IRR software is resolving the members of a set which has a <spanx style="verb">src-members</spanx>
attribute, the resolver <bcp14>MUST NOT</bcp14> consider the contents of the <spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx>
attribute.</t>

<t>To find the referred set, the resolver <bcp14>MUST</bcp14> match on both the IRR registry
name and the set's primary key.
If the IRR registry is unknown to the resolver, no set can match the reference.</t>

<t>When an as-set/route-set does not contain an <spanx style="verb">src-members</spanx> attribute, the resolver
<bcp14>SHOULD</bcp14> consider the values of <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>.
If references are found to a set, and there are multiple sets
with this primary key known to the resolver, the behavior is
not defined by this document.</t>

</section>
</section>
<section anchor="relation-to-mp-members"><name>Relation to <spanx style="verb">(mp-)members</spanx></name>

<t>Existing IRR software will not be aware of the new <spanx style="verb">src-members</spanx> attribute
and instead refer to <spanx style="verb">(mp-)members</spanx>.
This is also why the existing attributes can not be modified - this software
would consider e.g. <spanx style="verb">RIPE::AS-EXAMPLE</spanx> as the full primary key, and fail
to look up the reference as intended.</t>

<t>Existing IRR objects may also not be updated with <spanx style="verb">src-members</spanx> for some time,
as this can not be done automatically.
Deployment in both software and objects will be a gradual process, however,
even partial deployment will reduce the potential for issues from reference
mixups.</t>

<t>In order to keep support for existing IRR software, the contents of
<spanx style="verb">src-members</spanx> must match <spanx style="verb">(mp-)members</spanx> as close as possible,
which the IRR server can ensure.</t>

<section anchor="additional-validation"><name>Additional validation</name>

<t>When an authoritative IRR registry processes a set object with a <spanx style="verb">src-members</spanx>
attribute, it <bcp14>MUST</bcp14> ensure that the union of values in <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
is equal to the values of <spanx style="verb">src-members</spanx> with the registry names removed from set
references. All values <bcp14>MUST</bcp14> be combined, regardless if they were listed in
one attribute, or in multiple repetitions of the attribute.</t>

<t>This ensures that the new <spanx style="verb">src-members</spanx> can be used, providing the benefits
for updated software, while still having a consistent <spanx style="verb">(mp-)members</spanx> available
for older software.</t>

<t>IRR registry software is <bcp14>RECOMMENDED</bcp14> to make the <spanx style="verb">src-members</spanx> attribute
mandatory on all new as-set/route-set objects, and <bcp14>MAY</bcp14> make it required when modifying
existing objects.</t>

<t>Example of a valid object:</t>

<figure title="Valid object"><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/32
mp-members: RS-OTHER
src-members: 192.0.2.0/24, RIPE::RS-OTHER, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

<t>Example of an invalid object:</t>

<figure title="Invalid object: inconsistent inclusion of RS-MPMBRONLY, NTTCOM::RS-SRCMBRONLY, and 200:db8::/36 vs /32"><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/36
mp-members: RS-OTHER, RS-MPMBRONLY
src-members: 192.0.2.0/24, RIPE::RS-OTHER
src-members: NTTCOM::RS-SRCMBRONLY, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

</section>
<section anchor="automatic-generation-of-mp-members"><name>Automatic generation of <spanx style="verb">(mp-)members</spanx></name>

<t>Managing multiple copies of the same records is tedious for users.
Therefore, IRR registry software is <bcp14>RECOMMENDED</bcp14> to automatically
fill <spanx style="verb">(mp-)members</spanx>, if not specified by the user, based on <spanx style="verb">src-members</spanx>.</t>

<t>Specifically, for authoritative IRR registries:</t>

<t><list style="symbols">
  <t>It is <bcp14>RECOMMENDED</bcp14> that when processing a route-set object
with a <spanx style="verb">src-members</spanx> attribute, but without both a <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
attribute, the software fills the <spanx style="verb">mp-members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with IRR registry prefix removed from references.</t>
  <t>It is <bcp14>RECOMMENDED</bcp14> that when processing an as-set object
with a <spanx style="verb">src-members</spanx> attribute, but without a <spanx style="verb">members</spanx>
attribute, the software fills the <spanx style="verb">members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with IRR registry prefix removed from references.</t>
</list></t>

<t>The registry <bcp14>MAY</bcp14> return an informational message to the user about
the modifications.
The objects <bcp14>MUST NOT</bcp14> be modified if already submitted with any
<spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx> attribute, though the validation rules noted
above <bcp14>MUST</bcp14> still be applied.</t>

<t>IRR registry software <bcp14>MUST NOT</bcp14> attempt to automatically derive
<spanx style="verb">src-members</spanx> from <spanx style="verb">(mp-)members</spanx>, as this can not be done reliably.</t>

</section>
<section anchor="multiple-references-to-the-same-primary-key"><name>Multiple references to the same primary key</name>

<t><em>Note for review: this option is questionable. The risk is that the difference</em>
<em>in interpretation between legacy members and new src-members increases.</em></t>

<t>Adding a IRR registry scope to each reference allows a new behavior:</t>

<figure title="Valid object using multiple registry prefixes with the same RPSL primary key"><sourcecode type="rpsl"><![CDATA[
as-set: AS-EXAMPLE
members: AS-OTHER
src-members: RIPE::AS-OTHER, ARIN::AS-OTHER
source: EXAMPLE
]]></sourcecode></figure>

<t>Assuming both RIPE and ARIN have an as-set with primary key <spanx style="verb">AS-OTHER</spanx>, the
<xref target="RFC2622"/> interpretation of this <spanx style="verb">members</spanx> attribute is ambiguous in which
object is referenced. It is however clear that it refers to one of them.</t>

<t>The new option of <spanx style="verb">src-members</spanx> not only allows defining which single object
was meant to be referenced, but also allows operators to intentionally include
multiple objects that have the same primary key in their respective IRR registries.</t>

</section>
</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This memo includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t>This document removes a potential security issue where routing
policy could be manipulated by maliciously creating set objects,
which could be picked over legitimate objects.</t>

<t>While not a new issue, references between set objects can be
circular, and software <bcp14>MUST</bcp14> detect such cases while resolving.
It <bcp14>MAY</bcp14> also choose to limit depth or size of their resolving
to avoid excessive resource use.</t>

</section>


  </middle>

  <back>



    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2622">
  <front>
    <title>Routing Policy Specification Language (RPSL)</title>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="E. Gerich" initials="E." surname="Gerich"/>
    <author fullname="D. Kessens" initials="D." surname="Kessens"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="T. Bates" initials="T." surname="Bates"/>
    <author fullname="D. Karrenberg" initials="D." surname="Karrenberg"/>
    <author fullname="M. Terpstra" initials="M." surname="Terpstra"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>RPSL allows a network operator to be able to specify routing policies at various levels in the Internet hierarchy; for example at the Autonomous System (AS) level. At the same time, policies can be specified with sufficient detail in RPSL so that low level router configurations can be generated from them. RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2622"/>
  <seriesInfo name="DOI" value="10.17487/RFC2622"/>
</reference>
<reference anchor="RFC2725">
  <front>
    <title>Routing Policy System Security</title>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="S. Murphy" initials="S." surname="Murphy"/>
    <date month="December" year="1999"/>
    <abstract>
      <t>The implementation and deployment of a routing policy system must maintain some degree of integrity to be of any operational use. This document addresses the need to assure integrity of the data by providing an authentication and authorization model. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2725"/>
  <seriesInfo name="DOI" value="10.17487/RFC2725"/>
</reference>
<reference anchor="RFC4012">
  <front>
    <title>Routing Policy Specification Language next generation (RPSLng)</title>
    <author fullname="L. Blunk" initials="L." surname="Blunk"/>
    <author fullname="J. Damas" initials="J." surname="Damas"/>
    <author fullname="F. Parent" initials="F." surname="Parent"/>
    <author fullname="A. Robachevsky" initials="A." surname="Robachevsky"/>
    <date month="March" year="2005"/>
    <abstract>
      <t>This memo introduces a new set of simple extensions to the Routing Policy Specification Language (RPSL), enabling the language to document routing policies for the IPv6 and multicast address families currently used in the Internet. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4012"/>
  <seriesInfo name="DOI" value="10.17487/RFC4012"/>
</reference>
<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>
<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>



    </references>





  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA8Va7XIbN5b9j6fAKj9iT5GMpHWchDUfy9hKWVWSrJWczKaS
lAV2gyKi7kYP0E1aSXmfZZ5lnmzPvQD6g6Jc9lbNjKtsk81u4H6ee+5FT6dT
4RtV5W9VYSs9l41rtTC140++OT48/ObwWGSqmUtTrazw7bI03htbNfc17j89
efOdUE6ruRTb27kQuc0qVeKX3KlVM3W2NL9WU1f7Yur0rfGNu5/6zNY6n5a6
XGrnp4eHoq1z1Wg/l8fPj48n8tnh0bEQjWkKLHQVH5PhMRkfkyvr5NXl9Zn0
upF2+avOGi/Ucun05hMfKlR1O5e6EnfbuZByKklcodpmbd1cTKE5JLueyStW
BncEDa+VX6v+onW3tG9h1LK4ly9srnNczUxzP5eL0jfa5aqkK7atINlcXpzh
my6VKebS01r/5eLTGT08qwohRGVdqRqz0STZ1XcvyEDp41fHX8aPZLC5IA91
d4vpdCrVEkZQWSPEm7XxEs5pS101Mtpb/v57XPL9e4koCN9pMXxfwni1zszq
3lS38sa7LHnsZiKUrPRWqqZxZtk2WtpKKj8lo9IyzuIafRPRxDChbNYaxmob
Wu3SFia7l9e8vkF4IaDkGdzQqlstn5CHns6CzP0eqijsFheiWCaTKaJkY+VS
p+twN7lZq2wd/Q7L0GO6mUi1sSYnEWpnl4Uma2VSlUtz28JTcrvWFZb1ttjQ
TaRQVHomFqzzRhUmDwK7tuikunUqb1UBy9InmJbssFTZ3Va53MPpZY2HlqbA
LrPgnNLkeaGF+EyeIiBs3ma0Krnq0ww18mKuV6bC9rC22OeRFPQTqd81ukKc
kW8Gfiezaw+9HP6WFjKQ40rrG1ICF+SOTyG8dhVWTjJ3uffk9OrqqfT3iP0y
LQsRYA1VSW3wsIOtV9rpKsNmMjcOC0eDS7vi5SmKnvgWvlRkVLm4llVLN0zk
6SW8CH3fQZkmmz2dIAelynNDVoIveK/t2uBZrFR6XWxgmbXaaIHvBltsq/Gm
7LYv7FCsewoB64LkiB+yF0xsmhY6nVZyaZs1FPIaPzYUsOlRMkXrgyuGy8uy
TokkuuD2Yxdca7eBCejurDCUsd6umi35hGy3shR0tDAs2onqKQ1ECF4d4h0Z
DxVx2cAScdNJ/An2DdbDg9B4ca0R4whyjnl1H9alZ1Vl2VX0A0DBVFnRcgqR
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

-->

</rfc>

