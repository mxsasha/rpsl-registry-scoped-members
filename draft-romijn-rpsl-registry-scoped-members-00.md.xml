<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.23 (Ruby 3.4.1) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-romijn-rpsl-registry-scoped-members-00" category="info" submissionType="IETF" xml:lang="en" updates="2622, 4012">
  <front>
    <title abbrev="Registry scoped members for RPSL set objects">Registry scoped members for RPSL set objects</title>

    <author initials="S." surname="Romijn" fullname="Sasha Romijn">
      <organization>Reliably Coded</organization>
      <address>
        <postal>
          <city>Amsterdam</city>
          <country>NL</country>
        </postal>
        <email>sasha@reliablycoded.nl</email>
      </address>
    </author>

    <date year="2025" month="February" day="07"/>

    
    
    <keyword>rpsl</keyword>

    <abstract>


<?line 32?>

<t>This document updates <xref target="RFC2622"/> and <xref target="RFC4012"/> by specifying <spanx style="verb">src-members</spanx>,
a new attribute on as-set and route-set
objects in the Routing Policy Specification Language (RPSL).
This attribute allows a specific registry to be specified for each member
in a set, avoiding problematic ambiguity when resolving set members.
A new validation rule allows gradual upgrades and backwards compatibility.</t>



    </abstract>



  </front>

  <middle>


<?line 41?>

<section anchor="introduction"><name>Introduction</name>

<t>The Routing Policy Specification Language (RPSL) <xref target="RFC2622"/> defines the
as-set and route-set objects, extended in <xref target="RFC4012"/>.
These are among the most common objects in the Internet Routing Registry (IRR) system.
These sets can either reference a direct member of the set
(such as an AS number, IP prefix, etc.), or additional sets which themselves have
their own direct members and/or reference yet more sets, ad infinitum.
In both cases, this referencing uses the members and mp-members
attributes <xref target="RFC4012"/>.
Server and client software can follow these references to 
resolve a set down to its members, a set of prefixes or ASes.</t>

<t>A set may refer to another set by including the primary key in its
<spanx style="verb">(mp-)members</spanx> attribute, which may be in the same, or another IRR registry.
It is not possible to specify the IRR registry of
the referred set. This makes primary key collisions possible
when resolving a set:</t>

<t><list style="numbers" type="1">
  <t>There are multiple significant IRR registries.</t>
  <t>Sets often reference objects in registries other than the registry the set itself is stored in.</t>
  <t>There is no guaranteed uniqueness of object primary keys amongst the different registries.</t>
  <t>Hence, multiple objects may exist in the IRR system with the same name, making references to them ambiguous.</t>
  <t>Many IRR servers will mirror data from multiple IRRs, meaning that even within
a single server, there are usually collisions.</t>
</list></t>

<t>The ambiguity encountered when resolving set members can result in either an
incorrect RPSL object being chosen, because an object with the same primary key
was retrieved from the wrong IRR registry, or the required RPSL object (which does exist)
is not found, because the resolving process didn't try to retrieve the object from
the correct IRR registry.
"Incorrect" and "wrong" in this context meaning: not as intended or expected by the operator.</t>

<t>With the former case, the result can be that unintentional routing policy information
maybe be computed and deployed to network infrastructure, which could aid in route leaking,
and in the worst case, route hijacking.
This has been seen multiple times on the public Internet.</t>

<t>With either case, routing policy information may end up missing and connectivity
may be disrupted.</t>

<t>There is no current way to prevent such ambiguity during set member resolution,
both for operators who create the legitimate objects and those who try to resolve them.</t>

<t>Two previous enhancements to reduce set name collisions have been standardized.
however, the problem persists:</t>

<t><list style="symbols">
  <t><xref target="RFC2622"/> Section 5.1 defines hierarchical set names, such as <spanx style="verb">AS65000:AS-EXAMPLE</spanx>
which may also have additional authorization requirements for the referred aut-num.
However, this authorization only works within a single IRR registry, and doesn't
allow the correct external IRR to be specified, if the object in question is not
local to the IRR registry storing the referring set.</t>
  <t><xref target="RFC2725"/> Section 9.6 defines external repository (IRR) references.
This allows for the correct IRR registry to be specified for a set member object
by using the SOURCE:: notation however, this syntax isn't supported in the members
filed of set objects.</t>
</list></t>

<t>To solve this, this documents adds <spanx style="verb">src-members</spanx> to as-set and route-set objects,
using a IRR registry name prefix with a double colon.
For example: "RIPE::AS-EXAMPLE", to refer specifically to an object "AS-EXAMPLE"
in the IRR "RIPE". This format is already widely used informally by operators,
including in platforms such as PeeringDB.
Continued availability of existing <spanx style="verb">(mp-)members</spanx> attributes
together with new validation rules, ensures backwards compatibility.</t>

<section anchor="requirements-language"><name>Requirements Language</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

</section>
</section>
<section anchor="the-src-members-attribute"><name>The <spanx style="verb">src-members</spanx> attribute</name>

<section anchor="as-set-class"><name>as-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on as-set is similar to the <spanx style="verb">members</spanx> attribute
from <xref target="RFC2622"/>, except that the AS set name <bcp14>MUST</bcp14> be prefixed with a registry name.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="route-set-class"><name>route-set class</name>

<t>The new <spanx style="verb">src-members</spanx> attribute on route-set is similar to the <spanx style="verb">mp-members</spanx> attribute 
from <xref target="RFC4012"/>, except that any references to set names <bcp14>MUST</bcp14> 
be prefixed with a registry name.</t>

<dl newline="true">
  <dt>Attribute:</dt>
  <dd>
    <t><spanx style="verb">src-members</spanx></t>
  </dd>
  <dt>Value:</dt>
  <dd>
    <t>list of ([<spanx style="verb">ipv4-address-prefix-range</spanx>] or [<spanx style="verb">ipv6-address-prefix-range</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">as-set-name</spanx>] or [<spanx style="verb">as-number</spanx>] or [<spanx style="verb">registry-name</spanx>]::[<spanx style="verb">route-set-name</spanx>][<spanx style="verb">range-operator</spanx>])</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>optional, multi-valued</t>
  </dd>
</dl>

</section>
<section anchor="resolving"><name>Resolving members through <spanx style="verb">src-members</spanx></name>

<t>When IRR software is resolving the members of a set which has a <spanx style="verb">src-members</spanx>
attribute as part of a query,
the resolver <bcp14>MUST NOT</bcp14> consider the contents of the <spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx>
attribute. This is consistent with <xref target="RFC2622"/> section 10.2.</t>

<t>To find the referred set, the resolver <bcp14>MUST</bcp14> match on both the IRR registry
name and the set's primary key.
If the IRR registry is unknown to the resolver, no set can match the reference.</t>

<t>When an as-set/route-set does not contain an <spanx style="verb">src-members</spanx> attribute, the resolver
<bcp14>SHOULD</bcp14> consider the values of <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>.
These objects may still be encountered if they were created or updated before
adoption of <spanx style="verb">src-members</spanx>, or the objects have not been updated since.
If references are found to a set, and there are multiple sets
with this primary key known to the resolver, the behavior is
not defined by this document as this was a previously existing problem.</t>

<t>Note that the restriction to a specific IRR registry name is only used
to select the correct IRR registry to retrieve the referred object and its
attributes.
When recursive resolving, if that set has references to further sets,
those <bcp14>MUST</bcp14> be retrieved from a potentially different registry (either the
registry specified in the <spanx style="verb">src-members</spanx> attribute if that attribute is present,
or the existing source selection algorithm the IRR server currently uses if
resolving using <spanx style="verb">(mp-)members</spanx>. In other words, the restriction of the lookup
to a specific IRR registry does not cascade.</t>

<t>Example:</t>

<figure title="Objects for recursive lookups"><sourcecode type="rpsl"><![CDATA[
route-set: RS-FIRST
src-members: RIPE::RS-SECOND
source: EXAMPLE

route-set: RS-SECOND
members: RS-THIRD
source: RIPE

route-set: RS-THIRD
members: AS65000
source: OTHER
]]></sourcecode></figure>

<t>To perform a recursive resolve of RS-FIRST, the IRR software
looks up RS-FIRST, then looks up RS-SECOND in the RIPE registry,
then looks for RS-THIRD in any registry enabled for this query.
If all mentioned registries are enabled, RS-FIRST would resolve to AS64500.</t>

</section>
</section>
<section anchor="relation-to-mp-members"><name>Relation to <spanx style="verb">(mp-)members</spanx></name>

<t>Existing IRR software will not be aware of the new <spanx style="verb">src-members</spanx> attribute
and instead refer to <spanx style="verb">(mp-)members</spanx>.
This is also why the existing attributes can not be modified - this software
would consider e.g. <spanx style="verb">RIPE::AS-EXAMPLE</spanx> as the full primary key, and fail
to look up the reference as intended.</t>

<t>Existing IRR objects may also not be updated with <spanx style="verb">src-members</spanx> for some time,
as this can not be done automatically.
Deployment in both software and objects will be a gradual process, however,
even partial deployment will reduce the potential for issues from reference
mixups.</t>

<t>In order to keep support for existing IRR software, the contents of
<spanx style="verb">src-members</spanx> must match <spanx style="verb">(mp-)members</spanx> as close as possible,
which the IRR server can ensure.</t>

<section anchor="additional-validation"><name>Additional validation</name>

<t>When an authoritative IRR registry processes a set object with a <spanx style="verb">src-members</spanx>
attribute, it <bcp14>MUST</bcp14> ensure that the union of values in <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
is equal to the values of <spanx style="verb">src-members</spanx> with the registry names removed from set
references. All values <bcp14>MUST</bcp14> be combined, regardless if they were listed in
one attribute, or in multiple repetitions of the attribute.</t>

<t>This ensures that the new <spanx style="verb">src-members</spanx> can be used, providing the benefits
for updated software, while still having a consistent <spanx style="verb">(mp-)members</spanx> available
for older software.</t>

<t>IRR registry software is <bcp14>RECOMMENDED</bcp14> to make the <spanx style="verb">src-members</spanx> attribute
mandatory on all new as-set/route-set objects, and <bcp14>MAY</bcp14> make it required when modifying
existing objects.</t>

<t>This may appear to conflict with the <xref target="resolving">section on resolving</xref>,
which says IRR software must not consider <spanx style="verb">(mp-)members</spanx> when <spanx style="verb">src-members</spanx>
is present. However, that section is about resolving a query on IRR data,
this section is about processing object creation and modification 
in software that is authoritative for the IRR registry.</t>

<t>Example of a valid object:</t>

<figure title="Valid object"><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/32
mp-members: RS-OTHER
src-members: 192.0.2.0/24, RIPE::RS-OTHER, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

<t>Example of an invalid object:</t>

<figure title="Invalid object: inconsistent inclusion of RS-MPMBRONLY, NTTCOM::RS-SRCMBRONLY, and 200:db8::/36 vs /32"><sourcecode type="rpsl"><![CDATA[
route-set: RS-EXAMPLE
members: 192.0.2.0/24
mp-members: 2001:db8::/36
mp-members: RS-OTHER, RS-MPMBRONLY
src-members: 192.0.2.0/24, RIPE::RS-OTHER
src-members: NTTCOM::RS-SRCMBRONLY, 2001:db8::/32
source: EXAMPLE
]]></sourcecode></figure>

</section>
<section anchor="automatic-generation-of-mp-members"><name>Automatic generation of <spanx style="verb">(mp-)members</spanx></name>

<t>Managing multiple copies of the same records is tedious for users.
Therefore, IRR registry software is <bcp14>RECOMMENDED</bcp14> to automatically
fill <spanx style="verb">(mp-)members</spanx>, if not specified by the user, based on <spanx style="verb">src-members</spanx>,
in authoritative objects, when the user creates or updates the object.</t>

<t>Specifically, for authoritative IRR registries:</t>

<t><list style="symbols">
  <t>It is <bcp14>RECOMMENDED</bcp14> that when creating/updating a route-set object
with a <spanx style="verb">src-members</spanx> attribute, but without both a <spanx style="verb">members</spanx> and <spanx style="verb">mp-members</spanx>
attribute, the software fills the <spanx style="verb">mp-members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with IRR registry prefix removed from references.</t>
  <t>It is <bcp14>RECOMMENDED</bcp14> that when creating/updating an as-set object
with a <spanx style="verb">src-members</spanx> attribute, but without a <spanx style="verb">members</spanx>
attribute, the software fills the <spanx style="verb">members</spanx> attribute automatically with the contents
of <spanx style="verb">src-members</spanx>, with IRR registry prefix removed from references.</t>
</list></t>

<t>The registry <bcp14>MAY</bcp14> return an informational message to the user about
the modifications.
The objects <bcp14>MUST NOT</bcp14> be modified if already submitted with any
<spanx style="verb">members</spanx> or <spanx style="verb">mp-members</spanx> attribute, though the validation rules noted
above <bcp14>MUST</bcp14> still be applied.
Non-authoritative servers <bcp14>MUST NOT</bcp14> generate <spanx style="verb">src-members</spanx> automatically.</t>

<t>IRR registry software <bcp14>MUST NOT</bcp14> attempt to automatically derive
<spanx style="verb">src-members</spanx> from <spanx style="verb">(mp-)members</spanx>, as this can not be done reliably.</t>

</section>
<section anchor="multiple-references-to-the-same-primary-key"><name>Multiple references to the same primary key</name>

<t>Adding a IRR registry scope to each reference syntactically allows a new
behavior: having multiple references to the same RPSL primary key.
This is not permitted, and IRR registry software <bcp14>MUST</bcp14> reject this:</t>

<figure title="Invalid object using multiple registry prefixes with the same RPSL primary key"><sourcecode type="rpsl"><![CDATA[
as-set: AS-EXAMPLE
src-members: RIPE::AS-OTHER, ARIN::AS-OTHER
source: EXAMPLE
]]></sourcecode></figure>

<t>The IRR registry software <bcp14>MUST</bcp14> verify that, without their registry prefix,
all references from <spanx style="verb">src-members</spanx> are unique.</t>

<t>This avoids ambiguity regarding backwards compatibility with <spanx style="verb">(mp-)members</spanx>
described earlier.
If allowed, the attribute <spanx style="verb">src-members: RIPE::AS-OTHER, ARIN::AS-OTHER</spanx> would
refers to two different sets, whereas the translation <spanx style="verb">mp-members: AS-OTHER</spanx>
only refers one set.</t>

</section>
</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This memo includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t>This document removes a potential security issue where routing
policy could be manipulated by maliciously creating set objects,
which could be picked over legitimate objects.</t>

<t>While not a new issue, references between set objects can be
circular, and software <bcp14>MUST</bcp14> detect such cases while resolving.
It <bcp14>MAY</bcp14> also choose to limit depth or size of their resolving
to avoid excessive resource use.</t>

</section>


  </middle>

  <back>



    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2622">
  <front>
    <title>Routing Policy Specification Language (RPSL)</title>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="E. Gerich" initials="E." surname="Gerich"/>
    <author fullname="D. Kessens" initials="D." surname="Kessens"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="T. Bates" initials="T." surname="Bates"/>
    <author fullname="D. Karrenberg" initials="D." surname="Karrenberg"/>
    <author fullname="M. Terpstra" initials="M." surname="Terpstra"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>RPSL allows a network operator to be able to specify routing policies at various levels in the Internet hierarchy; for example at the Autonomous System (AS) level. At the same time, policies can be specified with sufficient detail in RPSL so that low level router configurations can be generated from them. RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2622"/>
  <seriesInfo name="DOI" value="10.17487/RFC2622"/>
</reference>
<reference anchor="RFC2725">
  <front>
    <title>Routing Policy System Security</title>
    <author fullname="C. Villamizar" initials="C." surname="Villamizar"/>
    <author fullname="C. Alaettinoglu" initials="C." surname="Alaettinoglu"/>
    <author fullname="D. Meyer" initials="D." surname="Meyer"/>
    <author fullname="S. Murphy" initials="S." surname="Murphy"/>
    <date month="December" year="1999"/>
    <abstract>
      <t>The implementation and deployment of a routing policy system must maintain some degree of integrity to be of any operational use. This document addresses the need to assure integrity of the data by providing an authentication and authorization model. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2725"/>
  <seriesInfo name="DOI" value="10.17487/RFC2725"/>
</reference>
<reference anchor="RFC4012">
  <front>
    <title>Routing Policy Specification Language next generation (RPSLng)</title>
    <author fullname="L. Blunk" initials="L." surname="Blunk"/>
    <author fullname="J. Damas" initials="J." surname="Damas"/>
    <author fullname="F. Parent" initials="F." surname="Parent"/>
    <author fullname="A. Robachevsky" initials="A." surname="Robachevsky"/>
    <date month="March" year="2005"/>
    <abstract>
      <t>This memo introduces a new set of simple extensions to the Routing Policy Specification Language (RPSL), enabling the language to document routing policies for the IPv6 and multicast address families currently used in the Internet. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4012"/>
  <seriesInfo name="DOI" value="10.17487/RFC4012"/>
</reference>
<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>
<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>



    </references>





  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA8Vb63IbN5b+j6fAyj9iT5G0pHU8CWt2ZhnbKatKkrWiMrup
JLUCu0ERcV+YRjdpxeV9lnmWebL9zsGl0a3L2Fu1u6mKTTYbwMG5fOc7B/B0
OhW2VVX+n6qoKz2XbdNpYbYNf7Lt8eHht4fHIlPtXJpqXQvbrUpjramr9naL
90/eXH0vVKPVXIr9zVyIvM4qVeKXvFHrdtrUpfm1mjZbW0wbfWNs29xObVZv
dT4tdbnSjZ0eHopum6tW27k8fnl8PJEvDo+OhWhNW2CiSz9MumHSD5PrupGX
F8tTaXUr69WvOmutUKtVo3dfOKhQ1c1c6kq838+FlFNJ4grVtZu6mYspdg7J
ljN5yZvBG26HS2U3qn9YNze0bmHUqriVr+pc53iamfZ2LhelbXWTq5Ke1F0F
yeby/BTfdKlMMZeW5vrXxo/OaPCsKoQQVd2UqjU7TZJdfv+KFBQ+/vH4a/+R
FDYXZKH4tphOp1KtoASVtUJcbYyVME5X6qqVXt/y40c/5adPEl7gvtNk+L6C
8rY6M+tbU93Ia9tkwWLXE6FkpfdStW1jVl2rZV1JZaekVJqmqfGMvgmvYqhQ
thsNZXUtzXZRFya7lUue38C94FDyFGbo1I2WT8lCz2ZO5n4NVRT1Hg+8WCaT
waNkW8uVDs9hbjKzVtnG2x2aoWG6nUi1q01OImybelVo0lYmVbkyNx0sJfcb
XWFaWxc7eok25Dc9Ewve804VJncCN10RpbppVN6pApqlT1At6WGlsvd71eQW
Ri+3GLQyBVaZOeOUJs8LLcQTeQKHqPMuo1nJVF+mqIEVc702FZaHtsV9FglO
P5H6Q6sr+BnZJrE7qV1b7KvB/2UNGchwZW1b2gQeyJFNIbxuKswcZI6x9/Tk
8vKZtLfw/TJMCxGgDVVJbTC4ga7XutFVhsVkbhpM7BUu6zVPT1701HawpSKl
ysVSVh29MJEnF7Ai9vsBm2mz2bMJYlCqPDekJdiC19pvDMZiptLqYgfNbNRO
C3w3WGJfDRdlsz2vU7FuyQXqxkkO/yF9QcWm7bCnk0qu6naDDVmNH1ty2DCU
VNFZZ4p0elluQyCJ6Nx2aIKlbnZQAb2dFYYi1tbrdk82Id2ta3I6mhgajaJa
CgPhnFc7f0fEY4t4bKAJv+jE/wT9Ou1hIHa8WGr4OJycfV7dunlprKpqNhX9
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
C+Ts4r8BVDTHmTw0AAA=

-->

</rfc>

